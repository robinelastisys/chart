{{- $namespaceSelectorLabels := .Values.mutations.namespaceSelectorLabels }}
{{- $namespaces := keys .Values.constraints | sortAlpha }}
{{- $exceptions := .Values.mutations.exceptions }}

{{- range $namespace, $services := .Values.constraints }}
{{- range $name, $value := $services }}
{{- if $value | dig "mutation" "dropAllCapabilities" "true" | not }}
{{- $exceptions = append $exceptions $value.podSelectorLabels }}
{{- end }}
{{- end }}
{{- end }}
---
apiVersion: mutations.gatekeeper.sh/v1
kind: ModifySet
metadata:
  name: {{ printf "capabilities-%s-restricted-container" .Release.Namespace | trunc 63 }}
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    {{- dict "namespaceSelectorLabels" $namespaceSelectorLabels "namespaces" $namespaces "exceptions" $exceptions | include "podsecuritypolicies.renderMatchExceptions" | nindent 4 }}
  location: "spec.containers[name: *].securityContext.capabilities.drop"
  parameters:
    values:
      fromList:
        - ALL
    pathTests:
      - subPath: "spec.containers[name: *].securityContext.capabilities.drop"
        condition: MustNotExist
---
apiVersion: mutations.gatekeeper.sh/v1
kind: ModifySet
metadata:
  name: {{ printf "capabilities-%s-restricted-ephemeral" .Release.Namespace | trunc 63 }}
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    {{- dict "namespaceSelectorLabels" $namespaceSelectorLabels "namespaces" $namespaces "exceptions" $exceptions | include "podsecuritypolicies.renderMatchExceptions" | nindent 4 }}
  location: "spec.ephemeralContainers[name: *].securityContext.capabilities.drop"
  parameters:
    values:
      fromList:
        - ALL
    pathTests:
      - subPath: "spec.ephemeralContainers[name: *].securityContext.capabilities.drop"
        condition: MustNotExist
---
apiVersion: mutations.gatekeeper.sh/v1
kind: ModifySet
metadata:
  name: {{ printf "capabilities-%s-restricted-init" .Release.Namespace | trunc 63 }}
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    {{- dict "namespaceSelectorLabels" $namespaceSelectorLabels "namespaces" $namespaces "exceptions" $exceptions | include "podsecuritypolicies.renderMatchExceptions" | nindent 4 }}
  location: "spec.initContainers[name: *].securityContext.capabilities.drop"
  parameters:
    values:
      fromList:
        - ALL
    pathTests:
      - subPath: "spec.initContainers[name: *].securityContext.capabilities.drop"
        condition: MustNotExist
